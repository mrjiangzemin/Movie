<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.OrderMapper">
	<resultMap type="com.entity.Order" id="BaseResultMap">
		<id property="order_id" column="order_id" javaType="java.lang.String"/>
		<result property="order_position" column="order_position" javaType="java.lang.String"/>
		<result property="order_state" column="order_state" javaType="java.lang.Integer"/>
		<result property="schedule_id" column="schedule_id" javaType="long"/>
		<result property="user_id" column="user_id" javaType="long"/>
		<result property="order_price" column="order_price" javaType="java.lang.Integer"/>
		<result property="order_time" column="order_time" javaType="java.util.Date"/>
	</resultMap>

	<resultMap type="com.entity.Order" id="OrderResultMap">
		<id property="order_id" column="order_id" javaType="java.lang.String"/>
		<result property="order_position" column="order_position" javaType="java.lang.String"/>
		<result property="order_state" column="order_state" javaType="java.lang.Integer"/>
		<result property="schedule_id" column="schedule_id" javaType="long"/>
		<result property="user_id" column="user_id" javaType="long"/>
		<result property="order_price" column="order_price" javaType="java.lang.Integer"/>
		<result property="order_time" column="order_time" javaType="java.util.Date"/>
		<association property="order_schedule" javaType="com.entity.Schedule">
			<id property="schedule_id" column="schedule_id2" javaType="long"/>
			<result property="hall_id" column="hall_id" javaType="long"/>
			<result property="movie_id" column="movie_id" javaType="long"/>
			<result property="schedule_price" column="schedule_price" javaType="java.lang.Integer"/>
			<result property="schedule_remain" column="schedule_remain" javaType="java.lang.Integer"/>
			<result property="schedule_startTime" column="schedule_startTime" javaType="java.lang.String"/>
			<result property="schedule_state" column="schedule_state" javaType="java.lang.Integer"/>
		</association>
	</resultMap>
	<select id="findOrderById" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from orderinfo where order_id = #{order_id}
	</select>
	
	<select id="findAllOrders" resultMap="BaseResultMap">
		select * from orderinfo order by order_time desc
	</select>
	
	
	<select id="findOrdersByScheduleId" parameterType="long" resultMap="BaseResultMap">
		select * from orderinfo where schedule_id = #{schedule_id} and order_state != 2 order by order_time desc
	</select>
	
	<select id="findOrdersByState" parameterType="int" resultMap="BaseResultMap">
		select * from orderinfo where order_state = #{order_state} order by order_time desc
	</select>
	
	<select id="findOrdersByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
		select orderinfo.*  from orderinfo,user where orderinfo.user_id = user.user_id and user.user_name = #{user_name} order by order_time desc
	</select>
	
	<select id="findRefundOrderByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
		select orderinfo.*  from orderinfo,user where orderinfo.user_id = user.user_id and user.user_name = #{user_name} and orderinfo.order_state = 0 order by order_time desc
	</select>
	<insert id="addOrder" parameterType="com.entity.Order">
		insert into orderinfo(order_id,order_position,schedule_id,user_id,order_price,order_time)
		values(#{order_id},#{order_position},#{schedule_id},#{user_id},#{order_price},#{order_time})
	</insert>
	<insert id="addOrders" parameterType="com.entity.Order">
		insert into orderinfo(order_position,schedule_id,user_id,order_price,order_time)
		values(#{order_position},#{schedule_id},#{user_id},#{order_price},#{order_time})
	</insert>
	<update id="updateOrderStateToRefund" parameterType="java.lang.String">
		update orderinfo set order_state = 0 where order_id = #{order_id}
	</update>
	
	<update id="updateOrderStateToRefunded" parameterType="java.lang.String">
		update orderinfo set order_state = 2 where order_id = #{order_id}
	</update>
	<select id="findOrderByOpenId" statementType="PREPARED" resultMap="BaseResultMap">
		SELECT a.*,s.schedule_id as schedule_id2,s.hall_id,s.movie_id,s.schedule_price,s.schedule_startTime,s.schedule_state
		FROM orderinfo A LEFT JOIN schedule s on A.schedule_id = s.schedule_id
		WHERE A.user_id = (SELECT B.user_id FROM user B WHERE B.openid = #{openId});
	</select>
</mapper>